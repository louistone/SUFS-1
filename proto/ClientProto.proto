syntax = "proto3";
package ClientProto;

service ClientProto {
	//Delete a directory 
  rpc DeleteDirectory (Path) returns (StatusResponse) {}

	//Create a directory
	rpc AddDirectory(Path) returns (StatusResponse) {}

	// List the DataNodes that store replicas of each block of a file
  rpc ListNodes(Path) returns (ListOfNodes) {}
	
	//Create a new file in SUFS
	rpc AddFile(NewFile) returns (StatusResponse){}
	
	//Read a file
	
	//Delete a file
	rpc DeleteFile(Path) returns (StatusResponse) {}
	
	//List the contents of a directory
	rpc ListContents (Path) returns (ListOfContents){}
	
	// bideectional streaming

	// write streaming
	
	// Reads block from datanode
	rpc ReadBlock(UUID) returns (stream BlockData) {}
  
  // Creates a pipeline to stream bytes to datanodes
	rpc WriteBlock(stream BlockData) returns (StatusResponse) {}
}


message DataBlock {
	UUID blockId = 1;
	bytes data = 2;
	repeated DataNode dataNodes = 3; // Remaining nodes to forward data to
}

message DataNode {
	UUID id = 1;
	string ipAddress = 2;
}

message BlockData {
	bytes data = 1;
}

message UUID {
	string value = 1;
}

message Path {
	string fullpath = 1;
}

message StatusResponse {
	enum StatusType {
		Success = 0;
		Fail = 1;
	}
	StatusType type = 1;
}

message ListOfNodes  {
	string blockId = 1;
	repeated string nodeId = 2;
}

message ListOfContents {
	repeated string fileName = 1;
}

message NewFile {
	string fullpath = 1;
	string address = 2; // s3 object
}