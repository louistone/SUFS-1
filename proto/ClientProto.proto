syntax = "proto3";
package ClientProto;

service ClientProto {


	// Move a file to another directory
	rpc MoveFile(DoublePath) returns (StatusResponse) {}

	// Read a file
	rpc ReadFile(Path) returns (BlockMessage) {}
	
	// Delete a file
	rpc DeleteFile(Path) returns (StatusResponse) {}
	
	// Create a directory (add or create?)
	rpc CreateDirectory(Path) returns (StatusResponse) {}

	// Delete a directory 
	rpc DeleteDirectory (Path) returns (StatusResponse) {}

	// Create a directory 
	rpc AddDirectory(Path) returns (StatusResponse) {}
	


	// List the DataNodes that store replicas of each block of a file
	rpc ListNodes(Path) returns (ListOfNodes) {}
	
	// Create a new file in SUFS
	rpc CreateFile(Path) returns (StatusResponse){}
	
	// rpc QueryBlockDestination(BlockList) returns (BlockList) {} 
	rpc QueryBlockDestination(BlockInfo) returns (BlockInfo) {} 
	
	// List the contents of a directory
	rpc ListContents (Path) returns (ListOfContents){}
	
	// Reads block from datanode
	rpc ReadBlock(UUID) returns (stream BlockData) {}
  
	// Creates a pipeline to stream bytes to datanodes
	rpc WriteBlock(stream BlockData) returns (StatusResponse) {}

	rpc GetReady(BlockInfo) returns (StatusResponse) {}
}






message DoublePath {
	string fullpath = 1;
	string newpath = 2;
}

message DataBlock {
	UUID blockId = 1;
	bytes data = 2;
	repeated DataNode dataNodes = 3; // Remaining nodes to forward data to
}

message DataNode {
	UUID id = 1;
	string ipAddress = 2;
}

message BlockMessage {
    repeated BlockInfo blockInfo = 1;
}

message BlockList {
	repeated BlockInfo blockInfo = 1;
}

message BlockInfo {
    UUID blockId = 1;
	int32 blockSize = 2;
    repeated string ipAddress = 3;
}

message BlockData {
	bytes data = 1;
}

message UUID {
	string value = 1;
}

message Path {
	string fullPath = 1;
}

message StatusResponse {
	enum StatusType {
		Success = 0;
		Fail = 1;
		Ready = 2;
		FileExists = 3;
		Ok = 4;
	}
	StatusType type = 1;
	string message = 2;
}

message ListOfNodes  {
	string blockId = 1;
	repeated string nodeId = 2;
}

message ListOfContents {
	repeated string fileName = 1;
}


